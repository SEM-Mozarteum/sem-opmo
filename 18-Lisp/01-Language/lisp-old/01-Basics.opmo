;;; Opusmodus Tutorial - Introduction to Common Lisp
;;; Studio for Electronic Music (SEM), University Mozarteum, Salzburg
;;; (c) 2015 - 2016, Achim Bornhoeft

;;; BASICS ;;;

;;; Numbers

;; There are three kinds of numbers that are used most commonly, integers, 
;; floating point numbers, and ratios.

;; Integers are whole numbers, e.g.

1
12
18446744073709551616.

;; Floating point numbers are  always written with a decimal point, e.g. 

5.0
3.141592653589793

;; Ratios are numbers consisting of nominator and denominator, e.g., 

1/2
2/3
3/5

;; Common Lisp automatically simplifies ratios to use the smallest 
;; possible denominator, e.g., the ratios

4/6 
6/9
(float 6/9) 
10/15 ; are all simplified to 2/3.


;;; Comments start with semicolons: 

;;; Three semicolons on the highest level
(defun minus-1 (x) 
  ;; two semicolons at the beginning inbetween code
  (- x 1) ; one semicolon at the end of code lines
  )
;; (minus-1 10) => 9 ; two semicolons for test evaluations

#|
This is a comment for more than one line.
This is a comment for more than one line.
This is a comment for more than one line.
|#


;;; Indentation

;; For the correct indentation (placing of the parantheses) double-click on the
;; first paranthesis an press ctrl-alt q.


;;; Synthax

;; The syntax of Lisp is simple. Lisp expressions are written inside parentheses 
;; and the elements are separated by spaces.


(+ 1 2 3)

(* (/ 5 6) pi)

(* (+ 1 2) 3)


;; The function operates on the data and returns a result. In a list the first 
;; element specifies the function. The remaining elements are the arguments.

;;; Evaluation

;; Place the cursor after any of the parantheses.
;; To evaluate an expression: 'fn + ret' oder 'cmd + e'

;;; Printing

;; To just print an output to the listener use print:

  (print "Hello World") ; => "Hello World"

  (+ 1 (print (+ 2 3)) 4) ; => 5 , 10
