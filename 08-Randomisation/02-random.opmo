;;; ---------------------------------------------------------
;;; Opusmodus Tutorial
;;; Studio for Electronic Music (SEM)
;;; University Mozarteum, Salzburg
;;; (c) 2015 - 2017, Achim Bornhoeft
;;; ---------------------------------------------------------

;;; RANDOMISATION

;; rnd1 returns a random floating point number between 0.0 and 1.0. 
;; If the low and high is an integer then the function returns 
;; a random number between low and high values.
(rnd1)

;; 10 random numbers
(gen-eval 10 '(rnd1))

;; 10 random integers
(loop repeat 10 collect (rnd1))

(setf pitches (midi-to-pitch (rnd 20 :low 48 :high 84 :seed 34)))


;; By default rnd returns a list of random floating point 
;; numbers N between 0.0 and 1.0. If the low and high is 
;; an integer then the function returns a list of random 
;; numbers N between low and high values.
(setf velocities 
      (get-velocity 
       (rnd (length pitches)) :type :symbol))

;; RND-REPEAT can be used to choose randomly a given 
;; number N of items from a sequence.
(setf lengths (rnd-repeat (length pitches) '(1/16 1/8 1/4)))

(setf mat1 (make-omn 
 :pitch pitches
 :length lengths
 :velocity velocities))

(setf mat2
(make-omn 
 :pitch (rnd-sample (length pitches) pitches)
 ;  RND-SAMPLE can be used to choose randomly a given number 
 ; of items from a sequence. 
 :length lengths
 :velocity velocities))

(setf mat3
      (make-omn 
       :pitch (rnd-order pitches)
       ;  RND-ORDER can be used to shuffle the order of a list. 
       :length lengths
       :velocity (rnd-order velocities)))

(def-score random-pitches
           (:key-signature '(c maj)
                           :time-signature '(4 4)
                           :tempo 80) 
  (inst1
   :omn mat1
   :sound 'gm :program 0)
  
 (inst2
   :omn mat2
   :sound 'gm :program 0)
  
  (inst3
   :omn mat3
   :sound 'gm :program 0)) 


(display-midi (compile-score 'random-pitches))
(display-musicxml 'random-pitches)