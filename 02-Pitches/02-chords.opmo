;;; ---------------------------------------------------------
;;; Opusmodus Tutorial
;;; Studio for Electronic Music (SEM)
;;; University Mozarteum, Salzburg
;;; (c) 2015 - 2017, Achim Bornhoeft
;;; ---------------------------------------------------------

;;; CHORDS

(midi-to-pitch '(58 (59 65) (60 67) 61 62)) ; => (bb3 b3f4 c4g4 cs4 d4)

#|
The 'respell' function can be used to change the pitch name of 
chord clusters to avoid the identical note names that produce 
conflicts in notation display. The function will also respell 
ascending pitch sequences to sharps and flats when pitches 
descend.
|#

(respell '(c4cs4)) ; => (c4db4)
(respell '(c4 db4 d4 eb4 e4 f4 gb4 g4 ab4 a4 bb4 b4)) 
;; => (c4 cs4 d4 ds4 e4 f4 fs4 g4 gs4 a4 as4 b4)

;; CHORDIZE-LIST allows you to chordize melodic lists.
(chordize-list '((c4 e4) (g4 c5)))

;; ;; The lowlevel function for converting melodies to chords
(compress '(c4 d4 f4)) ; => c4d4f4
;; and vice versa
(melodize '(c4d4f4)) ; => (c4 d4 f4)

;; several chords
(chordize-list (midi-to-pitch '((60 56) (67 62) (62 65 66) (63 60 61))))

;; construction of chords in lisp 
(loop repeat 10 collect
  (loop repeat (+ 1 (random 3)) collect (+ 60 (random 8)))) 

;; Divide up a melody into intervals
(chordize-list (gen-divide '(2) '(c4 f4 g4 a4 d4 f3)))

;; If there is a rest this rest is given as the last chord
(chordize-list (gen-divide '(4) '(c4 f4 g4 a4 d4 f3)))

;; Divide up a melody in different chords
(chordize-list (gen-divide '(2 1 3) '(c4 f4 g4 a4 d4 f3)))

;; The function CHORD-INVERSION will generate all the inversions (rotations) 
;; of a chord up to and including N. For example, the first inversion of 
;; C major will give us:
(chord-inversion 2 'c4e4g4 :list t)

;; three inversions (including the root chord)
(chord-inversion 3 (chordize (midi-to-pitch '(60 63 77))) :list t :root t)

#|
The function GEN-CHORD enables the composer to generate chords 
from a list of pitches.
The ambitus-chord argument (1) is the max ambitus possible 
randomly depending on the intervals available in the pitches. 
The size of the chord generated will lie between chord-low (2) 
and chord-high (3). 
The transposition of pitch values can also be set to lie between 
transpose-low (4) and transpose-high (5) parameters. 
|#

;; (the possible intervals are 2 2 5 5)
(gen-chord 7 2 2 0 0 '(c4 db4 fs4 g4 c5 f5 gb5 b5)) 

;; since the ambitus is quite high the possibilities of chord increase
(loop repeat 10 collect (gen-chord 11 3 4 -2 2 '(c4 db4 fs4 g4 c5 f5 gb5 b5)))  

;; This should produce 2 chords
(gen-chord 11 4 4 0 0 '(c4 db4 fs4 g4 c5 f5 gb5 b5)) 

;; intervals but randomly transposed -1 down and 1 semitone up
(gen-chord 11 2 2 -1 1 '(c4 db4 fs4 g4 c5 f5 gb5 b5))