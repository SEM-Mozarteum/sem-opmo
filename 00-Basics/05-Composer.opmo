;;; ---------------------------------------------------------
;;; Opusmodus Tutorial
;;; Studio for Electronic Music (SEM)
;;; University Mozarteum, Salzburg
;;; (c) Achim Bornhoeft
;;; ---------------------------------------------------------

;;; COMPOSER

;;; ---------------------------------------------------------

;;; LISP  /  EVALUATION

;; COMMON LISP
#|
Opusmodus is built on Common Lisp (LispWorks.
Common Lisp is a general-purpose, multi-paradigm
programming language. 
It supports a combination of procedural, functional,   
and object-oriented programming paradigms. 
As a dynamic programming language, it facilitates 
evolutionary and incremental software development, 
with iterative compilation into efficient run-time 
programs. 
Common Lisp is a dialect of Lisp. It uses S-expressions 
to denote both code and data structure. Function calls, 
macro forms and special forms are written as lists, 
with the name of the operator first.

https://en.wikipedia.org/wiki/Common_Lisp

(See 'Common Lisp' documentation in Navigator.)

Every correct LISP expression has the same amount of 
opening and closing parantheses.

Place the cursor after any of the parantheses to 
evaluate the containing expression.
To evaluate an expression press 'cmd + e' and 
see the result in Listener below.

1 to 3 semicolons are starting a comment. 
Multiline comments are starting with #| and ending with |#
There is a special Opusmodus way of multiline comments
where the code highlighting is preserved starting with #!
and ending with !#
Comments are not evaluated.
|#

#!
;;; (RED) MAIN COMMENTs, HEADERS, CREDITS, etc.
;; (ORANGE) Comments in the code
; (BROWN) Comments in line
!#

;; the first statement is generally a function
(+ 1 2) ; + function, result 3

(random 10) ; random function

(list 0 1 2 3 4 5 6 7) ; list function
;; same as
'(0 1 2 3 4 5 6 7) 
;; socalled quoted list, means "as it is" 
;; otherwise 0 would be the function

;; OPUSMODUS has (+/- 800) inbuilt functions , 
;; many of them directly related to music
(ambitus-instrument 'flute) 
;; => (0 41) result in integers

(integer-to-pitch (ambitus-instrument 'flute)) 
;; => ; (c4 f7) converted to notes
;; nested function calls are evaluated from inside to outside

(midi-to-pitch '(71 70 74 63 67 66 68 64 69))
;; (b4 bb4 d5 eb4 g4 fs4 gs4 e4 a4)

;; Press 'cmd-shift e' to evaluate the whole composer window 
;; and show the output of the last expression.

;;; ---------------------------------------------------------

;;; AUDITION and NOTATION of Code Snippets

#|
To see and hear the notation in OMN (OpusModus Notation) 
of any selected part (even single notes)
press 'cmd 1' (Notation).
To see and hear the notation of more than one voice
press 'cmd 2'
To play it in the Midi-Player
press 'cmd 3' (Midi Player)
Just to hear any selected part
press 'cmd 4' (Audition).

To stop Audition press cmd esc.
|#

;; Webern's Concerto Op. 24 tone row
'(b4 bb4 d5 eb4 g4 fs4 ab4 e4 f4 c5 cs5 a4)

'((e c4 d4 e4 f4) (q g4 =) (e a4 = = =) (q g4 -)
        (e a4 = = =) (q g4 -) (e f4 = = =) (q e4 =)
        (e g4 = = =) (q c4 -)) ; "Alle meine Entchen"

'((q d4 pp s eb4 < leg g4 < leg bb4 < leg a4 q. cs5 mf -e
     3q gs5 > leg fs5 > leg c5 > b4 > leg f4 leg e4)
  (t d4 < leg eb4 < leg g4 < leg bb4 q. a4 marc
     t fs4 mf leg gs4 leg e. c5 e b4 t f5 leg e5 leg d5 leg
     eb5 3q bb5 > a4 > bb5 > e a4 pp stacc -e))

;; To see several parts at once press 'cmd-2'
#!
(((q cs4 pp -q t gs4 marc e.. fs4 mf leg e c4 
     -e t b4 leg f4 q.. e4 pp))
  ((-q e d4 leg eb4 h g4 mf leg q. g4 > -e))
  ((s bb3 pp leg a3 h. db3 t gs4 mp fs3 < c5 < 
      b3 q f4 marc e4)))
!#

#|
To see and hear the notation of integers (0 = 60 = c4) 
of any selected part (even single notes)
press 'cmd 5' (Notation).
To play it in the Midi-Player
press 'cmd 6' (Midi Player)
Just to hear any selected part
press 'cmd 7' (Audition).
|#
	
'(11 10 14 3 7 6 8 4 5 12 13 9)

#|
To see and hear the notation of intervals (positive = up, 
negative = down) of any selected part 
press 'cmd 8' (Notation).
To play it in the Midi-Player
press 'cmd 9' (Midi Player)
Just to hear any selected part
press 'cmd 0' (Audition).
Intervals are generally starting with 0 = c4
|#

'(-1 4 -11 4 -1 2 -4 1 7 1 -4)

;;; -------------------------------------------------------  

;;; Documentation / Help

#|
Place the cursor anywhere in a function name and 
press 'ctrl y' for the direct display of the arguments
and a short description of the function. (Press esc to
close this display)

Press 'cmd d' for extensive documentation, examples
and occurrences in other documents. 
Works in Assistant as well!
|#

(rnd-sample 5 '(1 2 3 4 5) :norep t)

(midi-to-pitch '(71 70 74 63 67 66))

;;; -------------------------------------------------------  

;;; Shortcuts

#|
cmd e : Evaluate Expression

cmd E: Evaluate All (whole document)

cmd 1: Snippet Notation

alt-cmd 1: Evaluate Score to Notation

ctrl-alt-cmd 3: Hear last score

cmd-shift 1: Graph numbers

cmd-shift 2: Graph OMN
|#
